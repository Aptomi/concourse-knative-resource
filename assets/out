#!/usr/bin/env bash

# Copyright 2017, Z Lab Corporation. All rights reserved.
# Copyright 2017, kubernetes resource contributors
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# Set TMPDIR environment variable to /tmp if it does not defined
export TMPDIR="${TMPDIR:-/tmp}"

# shellcheck source=assets/common.sh
source "$(dirname "$0")/common.sh"

# Print the last exit code if it isn't 0 when this process exits
trap 'on_exit' EXIT

# The first argument is a path to the directory containing the build's full set of sources.
source_dir=$1
cd "$source_dir"

payload=$(mktemp "$TMPDIR/kubernetes-resource-request.XXXXXX")
cat > "$payload" <&0

GOOGLE_APPLICATION_CREDENTIALS="/tmp/service_account.json"
GOOGLE_ACCOUNT="$(jq -r '.source.gke.account' < "$payload")"
GOOGLE_PROJECT_NAME="$(jq -r '.source.gke.project' < "$payload")"
GOOGLE_ZONE="$(jq -r '.source.gke.zone' < "$payload")"
GOOGLE_GKE_NAME="$(jq -r '.source.gke.name' < "$payload")"

jq -r '.source.gke.service_account_json' < $payload > ${GOOGLE_APPLICATION_CREDENTIALS}
gcloud auth activate-service-account ${GOOGLE_ACCOUNT} --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
gcloud config set project ${GOOGLE_PROJECT_NAME}
gcloud container clusters get-credentials --zone ${GOOGLE_ZONE} ${GOOGLE_GKE_NAME}

#setup_kubectl "$payload"

jsonnet --tla-code-file inv=/dev/stdin -m ${RENDER_DIR}  ${JSONNET_TEMPLATE} < "${payload}"
kubectl apply -f ${RENDER_DIR}

jq --argfile payload /dev/stdin -n '$payload.params' >&3 < $payload
# vim: ai ts=2 sw=2 et sts=2 ft=sh
